on early-init
    start ueventd
         
on init
    export PATH /sbin
    export LD_LIBRARY_PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export INTERNAL_STORAGE /sdcard
    export EXTERNAL_STORAGE /external_sd

    symlink /system/etc /etc
    symlink /sbin/busybox /sbin/sh

    chmod 0755 /sbin/busybox

    mkdir /external_sd
    mkdir /system
    mkdir /sdcard
    mkdir /data
    mkdir /data/data
    mkdir /cache
    mkdir /devlog
    mount /tmp /tmp tmpfs

# USB init options
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb,mass_storage
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    
on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

# service choice_fn /sbin/choice_fn
#    oneshot

service power_test /sbin/power_test
    disabled
    oneshot

service offmode_charging /sbin/offmode_charging
    disabled
    oneshot

service detect_key /sbin/detect_key
    disabled
    oneshot

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    setprop service.adb.root 1
#    write /sys/class/android_usb/android0/enable 1
#    start adbd
    
# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

# Do not run adbd when debug property set to 0    
    on property:ro.debuggable=0
    stop adbd

on post-fs-data
    chown system system /sys/class/android_usb/android0/f_mass_storage/lun/file
    chmod 0660 /sys/class/android_usb/android0/f_mass_storage/lun/file